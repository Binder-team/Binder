{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer, DefaultTheme, DarkTheme } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport * as React from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport BookMatchingScreen from \"../screens/BookMatchingScreen\";\nimport AddBooksScreen from \"../screens/AddBooksScreen\";\nimport MyPageScreen from \"../screens/MyPageScreen\";\nimport MessagesScreen from \"../screens/MessagesScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === \"dark\" ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: \"Oops!\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Messages\",\n      component: MessagesScreen\n    })]\n  });\n}\nvar BottomTab = createBottomTabNavigator();\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"TabOne\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"TabOne\",\n      component: BookMatchingScreen,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          title: \"Find a book\",\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color;\n            return _jsx(TabBarIcon, {\n              name: \"code\",\n              color: color\n            });\n          },\n          headerRight: function headerRight() {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate(\"Messages\");\n              },\n              style: function style(_ref4) {\n                var pressed = _ref4.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: _jsx(FontAwesome, {\n                name: \"info-circle\",\n                size: 25,\n                color: Colors[colorScheme].text,\n                style: {\n                  marginRight: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"TabTwo\",\n      component: AddBooksScreen,\n      options: {\n        title: \"Add a book\",\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color;\n          return _jsx(TabBarIcon, {\n            name: \"code\",\n            color: color\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"TabThree\",\n      component: MyPageScreen,\n      options: {\n        title: \"My Page\",\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var color = _ref6.color;\n          return _jsx(TabBarIcon, {\n            name: \"code\",\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"names":["FontAwesome","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","Colors","useColorScheme","NotFoundScreen","BookMatchingScreen","AddBooksScreen","MyPageScreen","MessagesScreen","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","title","BottomTab","tabBarActiveTintColor","tint","navigation","tabBarIcon","color","headerRight","navigate","pressed","opacity","text","marginRight","TabBarIcon","props","marginBottom"],"sources":["/Users/user/Desktop/binder-app/Binder-client/navigation/index.tsx"],"sourcesContent":["import { FontAwesome } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport {\n  NavigationContainer,\n  DefaultTheme,\n  DarkTheme,\n} from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport * as React from \"react\";\nimport { ColorSchemeName, Pressable } from \"react-native\";\n\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\n\nimport BookMatchingScreen from \"../screens/BookMatchingScreen\";\nimport AddBooksScreen from \"../screens/AddBooksScreen\";\nimport MyPageScreen from \"../screens/MyPageScreen\";\nimport MessagesScreen from \"../screens/MessagesScreen\";\nimport {\n  RootStackParamList,\n  RootTabParamList,\n  RootTabScreenProps,\n} from \"../types\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\n\nexport default function Navigation({\n  colorScheme,\n}: {\n  colorScheme: ColorSchemeName;\n}) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === \"dark\" ? DarkTheme : DefaultTheme}\n    >\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"Root\"\n        component={BottomTabNavigator}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"NotFound\"\n        component={NotFoundScreen}\n        options={{ title: \"Oops!\" }}\n      />\n      {/* <Stack.Screen name=\"Login\" component={}/> */}\n      \n      \n      {/* @ts-ignore */}\n        <Stack.Screen name=\"Messages\" component={MessagesScreen} />\n     \n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\n\n//the nav bar at the bottom is this\n\n\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"TabOne\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}\n    >\n      <BottomTab.Screen\n        name=\"TabOne\"\n        component={BookMatchingScreen}\n        options={({ navigation }: RootTabScreenProps<\"TabOne\">) => ({\n          title: \"Find a book\",\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate(\"Messages\")}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}\n            >\n              <FontAwesome\n                name=\"info-circle\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"TabTwo\"\n        component={AddBooksScreen}\n        options={{\n          title: \"Add a book\",\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n      // @ts-ignore\n        name=\"TabThree\"\n        component={MyPageScreen}\n        options={{\n          title: \"My Page\",\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>[\"name\"];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}